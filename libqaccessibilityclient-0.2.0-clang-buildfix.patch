--- libqaccessibilityclient-0.2.0/src/qaccessibilityclient/accessibleobject.cpp.omv~	2017-08-24 22:16:59.726425107 +0200
+++ libqaccessibilityclient-0.2.0/src/qaccessibilityclient/accessibleobject.cpp	2017-08-24 22:21:13.291403806 +0200
@@ -18,7 +18,9 @@
     License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#define private public // workaround for clang "friend" bug
 #include "accessibleobject.h"
+#undef private
 
 #include <qstring.h>
 #include <qdebug.h>
--- libqaccessibilityclient-0.2.0/src/qaccessibilityclient/accessibleobject.h.omv~	2017-08-24 22:14:10.370099278 +0200
+++ libqaccessibilityclient-0.2.0/src/qaccessibilityclient/accessibleobject.h	2017-08-24 22:20:55.274532790 +0200
@@ -37,9 +37,14 @@ uint qHash(const QAccessibleClient::Acce
 
 namespace QAccessibleClient {
 
+class AccessibleObject;
 class AccessibleObjectPrivate;
 class RegistryPrivate;
 
+#ifndef QT_NO_DEBUG_STREAM
+QACCESSIBILITYCLIENT_EXPORT QDebug operator<<(QDebug, const AccessibleObject &);
+#endif
+
 /**
     This class represents an accessible object.
 
@@ -747,13 +752,9 @@ private:
     friend class CacheWeakStrategy;
     friend class CacheStrongStrategy;
     friend QDebug QAccessibleClient::operator<<(QDebug, const AccessibleObject &);
-    friend uint ::qHash(const AccessibleObject& object);
+    friend uint qHash(const QAccessibleClient::AccessibleObject& object);
 };
 
-#ifndef QT_NO_DEBUG_STREAM
-QACCESSIBILITYCLIENT_EXPORT QDebug operator<<(QDebug, const AccessibleObject &);
-#endif
-
 }
 
 Q_DECLARE_METATYPE(QAccessibleClient::AccessibleObject)
